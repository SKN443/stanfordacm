# Any line followed by a '#' character is ignored
# Section headings must be in square brackets
# Subsections within a section should follow the format:
#   [filename within code directory][tab character \t][subsection title]

[Vjp-pro]
templatePTN.cpp	PTN vjp

[Flow]
Dinic.cpp	Dinic's Algo for Sparse max-flow O($n^2*m$)
Mincost.cpp	Min cost Max Flow O($|V|^2*|E|^2$)

[Geometry]
ConveHull.cpp	Convex hull
ccw.cpp		ccw
hinhhoc.cpp	Khoảng cách điểm - đường thẳng trong Oxyz

[Numerical algorithms]
Bernoulli.cpp		Tính $1^p + 2^p + ... + n^p$ trong O($p^3$)
BasisVector.cpp		Basis vector O($n*log_2(a_i)$)
Prime1e9.cpp		Generate prime numbers 1->1e9 (0.7s với n=1e9 trên ideone)
Sumfloor.cpp		Sum of n/1 + n/2 +...+ n/n O(sqrt(n))
ExtendedEuclid.cpp	Gcd in O(log)
CountingDivisors.cpp	Count divisors O($N^{\frac{1}{3}}$)
PrimeCounting.cpp	Count prime numbers <= n (0.86s với $N = 5*10^{11}$ trên ideone)

[Graph algorithms]
topo.cpp		Topo sort
LienThongManh.cpp	Liệt kê thành phần liên thông mạnh O(n+m)
KhopCau.cpp		Khớp cầu O(n+m)
BellmanFord.cpp	Dijkstra nhưng trọng số cạnh có thể < 0 O(nm)
BronKerbosch.cpp	Liệt kê tất cả đồ thị con đầy đủ (sao cho số đồ thị con là nhỏ nhất)
EulerianPath.cc	Eulerian Path Algo
songlienthong.cpp	Tìm song liên thông O($(m + n) * log(n)$) (ko chắc, có thể là O($m * log(n) + n$))\\Sau khi DFS xong, mỗi tập hợp trong disjoint-sets là một TP song liên thông, cộng thêm 1 đỉnh là đỉnh cha của gốc TP song liên thông đó.
closestpair.cpp	Closest Pair of points in a 2D Plane O(nlog)
CapGhep.cpp		Tìm số cặp ghép cực đại O($n^2+nm$)

[Data structures]
HLD.cpp				HLD O($log^2$) với mỗi truy vấn 
BIT2D.cpp				BIT2D O(log(nm))
LazyPersistentSegmentTree.cpp	Lazy Persistent IT
LazyPIT.cpp				Lazy Persistent IT - Burntomatos
unionrollback.cpp			find O(lg(N)), merge O(lg(N)), undo O(1), getComponents O(1)	

[String Manipulation]
KMP.cpp		KMP O($|S|$)
SuffixArray.cpp	Suffix array O(nlogn) - hằng số raks
Z.cpp			Z's Algorithm, KMP's Bro O(n)

[Extra]
Dates.cc		Playing with dates
Mobius.cc		Mobius function
Mo.cpp		Mo's Algorithm O((N+Q)*sqrt(N))
graycode.cpp	Mã xám (Sinh một dãy mảng nhị phân phân biệt mà 2 phần tử kề nhau chỉ khác nhau đúng một vị trí (O(1) với 1 phần tử))

[Extra]
